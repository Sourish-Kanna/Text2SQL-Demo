services:
  # --- NEW UNIFIED DEV SERVICE ---
  # VS Code will connect to this container. It has access to all code.
  dev-environment:
    build:
      context: .
      dockerfile: dev.Dockerfile
    env_file:
      - ./.env
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DATABASE_HOST=db
      - DATABASE_USER=root
      - DATABASE_PASSWORD=mysecretpassword
      - DATABASE_NAME=employees
    volumes:
      # Mount the entire project folder into the container
      - .:/workspace:cached
    # Keep the container running in the background
    command: sleep infinity
    depends_on:
      - db

  # --- UI SERVICE (for production, not used by dev container) ---
  frontend:
    build: ./frontend
    ports:
      - "8080:80"

  # --- DB SERVICE (used by all) ---
  db:
    build: ./db-init  # <-- Tells Docker to build the Dockerfile in the db-init folder
    environment:
      MYSQL_ROOT_PASSWORD: mysecretpassword
      MYSQL_DATABASE: employees
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql # <-- The data persistence volume remains
      # The initialization volume is no longer needed because the files are copied in the image
    restart: unless-stopped

  # --- BACKEND SERVICE (for production, not used by dev container) ---
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DATABASE_HOST=db
      - DATABASE_USER=root
      - DATABASE_PASSWORD=mysecretpassword
      - DATABASE_NAME=employees
    depends_on:
      - db

volumes:
  mysql_data: